import time
from config import CHECK_INTERVAL, MA_WINDOW, THRESHOLD_PERCENT
from telegram_notifier import TelegramNotifier
from market_data import get_btc_ohlcv, calculate_moving_average
from dotenv import load_dotenv

load_dotenv()  # .env ÌååÏùº Î°úÎìú

# ÌÖîÎ†àÍ∑∏Îû® ÏÑ§Ï†ï
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")


def check_and_notify(notifier, current_price, ma_price, threshold_percent):
    deviation = abs(current_price - ma_price) / ma_price * 100
    if deviation <= threshold_percent:
        message = f"üì¢ *BTCUSDT Alert!*\n\n" \
                  f"ÌòÑÏû¨Í∞Ä: `{current_price:,.2f}`\n" \
                  f"{MA_WINDOW}MA: `{ma_price:,.2f}`\n" \
                  f"Ïù¥Í≤©ÎèÑ: `{deviation:.3f}%` <= `{threshold_percent}%`\n\n" \
                  f"üîî MA ÏàòÎ†¥ Ï°∞Í±¥ ÎßåÏ°±"
        notifier.send_message(message)

def main():
    notifier = TelegramNotifier(TELEGRAM_TOKEN, TELEGRAM_CHAT_ID)
    print("‚è≥ BTC MA ÏïåÎ¶º Î¥á Ïã§Ìñâ Ï§ë...")
    while True:
        try:
            df = get_btc_ohlcv(limit=MA_WINDOW+1)
            current_price = df["close"].iloc[-1]
            ma_price = calculate_moving_average(df, MA_WINDOW)
            check_and_notify(notifier, current_price, ma_price, THRESHOLD_PERCENT)
        except Exception as e:
            print(f"[ÏóêÎü¨ Î∞úÏÉù] {e}")
        time.sleep(CHECK_INTERVAL)


if __name__ == "__main__":
    main()
